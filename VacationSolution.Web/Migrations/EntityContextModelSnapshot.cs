// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using VacationSolution.Web.Entities;

namespace VacationSolution.Web.Migrations
{
    [DbContext(typeof(EntityContext))]
    partial class EntityContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VacationSolution.Web.Entities.Profile", b =>
                {
                    b.Property<int>("UserID");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Picture");

                    b.Property<string>("Title");

                    b.HasKey("UserID");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("VacationSolution.Web.Entities.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Email");

                    b.Property<string>("Password");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VacationSolution.Web.Entities.VacationAvailable", b =>
                {
                    b.Property<int>("UserID");

                    b.Property<int>("DaysAvalibale");

                    b.HasKey("UserID");

                    b.ToTable("VacationAvailable");
                });

            modelBuilder.Entity("VacationSolution.Web.Entities.VacationRequest", b =>
                {
                    b.Property<int>("RequestID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ApprovalID");

                    b.Property<string>("CalendarEventID");

                    b.Property<string>("Comments");

                    b.Property<int>("DaysRemaining");

                    b.Property<int>("NumberOfDays");

                    b.Property<DateTime>("ReturnDate");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("Status");

                    b.Property<int?>("UserID");

                    b.HasKey("RequestID");

                    b.HasIndex("UserID");

                    b.ToTable("VacationRequest");
                });

            modelBuilder.Entity("VacationSolution.Web.Entities.Profile", b =>
                {
                    b.HasOne("VacationSolution.Web.Entities.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("VacationSolution.Web.Entities.Profile", "UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VacationSolution.Web.Entities.VacationAvailable", b =>
                {
                    b.HasOne("VacationSolution.Web.Entities.User", "User")
                        .WithOne("VacationAvailable")
                        .HasForeignKey("VacationSolution.Web.Entities.VacationAvailable", "UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VacationSolution.Web.Entities.VacationRequest", b =>
                {
                    b.HasOne("VacationSolution.Web.Entities.User", "User")
                        .WithMany("VacationRequest")
                        .HasForeignKey("UserID");
                });
#pragma warning restore 612, 618
        }
    }
}
